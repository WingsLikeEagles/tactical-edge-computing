AWSTemplateFormatVersion: 2010-09-09

Description: >-
  Creates a standalone application vpc and deploys a sample web application
  with reverse proxy, ELBs, RDS, and other resources required for application
  development, testing, and deployment.

Metadata:
  Stack:
    Value: 3
  VersionDate:
    Value: 20180726
  Identifier:
    Value: template-application
  Input:
    Description: >-
      All your input are belong to me.
  Output:
    Description: Outputs ID of all deployed resources
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Region Config
        Parameters:
          - pEC2KeyPair
          - pAvailabilityZone1
          - pAvailabilityZone2
          - pDeploymentType
      - Label:
          default: Network (new VPC config)
        Parameters:
          - pVPCCidrRange
          - pPublicSubnetCidrRange1
          - pPublicSubnetCidrRange2
          - pPrivateSubnetCidrRange1
          - pPrivateSubnetCidrRange2

Parameters:

  pEC2KeyPair:
    Description: Name of EC2 key pair used to log into instances.
    Type: String
    Default: 'bssimpk-dev'

  pAvailabilityZone1:
    Description: 'Availability Zone #1'
    Type: 'AWS::EC2::AvailabilityZone::Name'
    Default: 'us-east-1a'

  pAvailabilityZone2:
    Description: 'Availability Zone #2'
    Type: 'AWS::EC2::AvailabilityZone::Name'
    Default: 'us-east-1b'

  pVPCCidrRange:
    Description: 'CIDR Block Range for the application VPC'
    Type: String
    Default: '10.200.0.0/16'

  pPublicSubnetCidrRange1:
    Description: 'CIDR Block Range for Public Subnet 1'
    Type: String
    Default: '10.200.100.0/24'

  pPublicSubnetCidrRange2:
    Description: 'CIDR Block Range for Public Subnet 2'
    Type: String
    Default: '10.200.102.0/24'

  pPrivateSubnetCidrRange1:
    Description: 'CIDR Block Range for Private Subnet 1'
    Type: String
    Default: '10.200.200.0/24'

  pPrivateSubnetCidrRange2:
    Description: CIDR Block Range for Private Subnet 2
    Type: String
    Default: '10.200.202.0/24'

  pDeploymentType:
    Description: Deployment Type
    Type: String
    Default: 'DEVELOPMENT'
    AllowedValues:
      - 'DEVELOPMENT'
      - 'TEST'
      - 'PRODUCTION'

Resources:

  #
  # VPC and Subnet Resources
  #

  rVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: { Ref: pVPCCidrRange }
      Tags:
        - Key: Name
          Value: { Ref: 'AWS::StackName' }

  rPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: { Ref: pAvailabilityZone1 }
      CidrBlock: { Ref: pPublicSubnetCidrRange1 }
      MapPublicIpOnLaunch: true
      VpcId: { Ref: rVPC }
      Tags:
        - Key: Name
          Value: { Ref: 'AWS::StackName' }

  rPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: { Ref: pAvailabilityZone2 }
      CidrBlock: { Ref: pPublicSubnetCidrRange2 }
      MapPublicIpOnLaunch: true
      VpcId: { Ref: rVPC }
      Tags:
        - Key: Name
          Value: { Ref: 'AWS::StackName' }

  rPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: { Ref: pAvailabilityZone1 }
      CidrBlock: { Ref: pPrivateSubnetCidrRange1 }
      MapPublicIpOnLaunch: false
      VpcId: { Ref: rVPC }
      Tags:
        - Key: Name
          Value: { Ref: 'AWS::StackName' }

  rPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: { Ref: pAvailabilityZone2 }
      CidrBlock: { Ref: pPrivateSubnetCidrRange2 }
      MapPublicIpOnLaunch: false
      VpcId: { Ref: rVPC }
      Tags:
        - Key: Name
          Value: { Ref: 'AWS::StackName' }

  #
  # Network Routing Resources
  #

  rInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: { Ref: 'AWS::StackName' }

  rInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: { Ref: rInternetGateway }
      VpcId: { Ref: rVPC }

  rPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: { Ref: rVPC }
      Tags:
        - Key: Name
          Value: { Ref: 'AWS::StackName' }

  rPublicRouteToInternetGateway:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: { Ref: rInternetGateway }
      RouteTableId: { Ref: rPublicRouteTable }

  rNatGatewayElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    DependsOn: rVPC

  rNatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt 'rNatGatewayElasticIP.AllocationId'
      SubnetId: { Ref: rPrivateSubnet1 }
      Tags:
        - Key: Name
          Value: { Ref: 'AWS::StackName' }

  rPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: { Ref: rVPC }
      Tags:
        - Key: Name
          Value: { Ref: 'AWS::StackName' }

  rPrivateRouteToNatGateway:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: { Ref: rNatGateway }
      RouteTableId: { Ref: rPrivateRouteTable }

