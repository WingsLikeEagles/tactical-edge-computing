version: 0.2

env:
  variables:
    REST_IMAGE:  "official-fd-supply-rest-services"
    REST_TAG:    "latest"
    PROXY_IMAGE: "official-fd-reverse-proxy"
    PROXY_TAG:   "latest"

phases:
  install:
    commands:
      - echo "install stage beginning"
      - env | sort
      - which apt
      - apt list --installed
      - apt-get update -y
    finally:
      - echo "install stage finishing"
  pre_build:
    commands:
      - echo "pre_build stage beginning"
      - docker images list
      - docker container list -a
      - echo "Logging in to Amazon ECR..."
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
    finally:
      - echo "pre_build stage finishing"
  build:
    commands:
      - echo "build stage beginning"
      - docker build src/fd_supply_services/ -t $REST_IMAGE:$REST_TAG
      - docker tag $REST_IMAGE:$REST_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/test-ecr-repo
      - docker build src/reverse-proxy/ -t $PROXY_IMAGE:$PROXY_TAG
      - docker tag $PROXY_IMAGE:$PROXY_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/test-ecr-repo
    finally:
      - echo "build stage finishing"
      - docker images
      - docker container list --all
  post_build:
    commands:
      - echo "post_build stage beginning"
      - docker save -o ${REST_IMAGE}-${REST_TAG}.tar $REST_IMAGE:$REST_TAG
      - docker save -o ${PROXY_IMAGE}-${PROXY_TAG}.tar $PROXY_IMAGE:$PROXY_TAG
    finally:
      - echo "post_build stage finishing"
artifacts:
  files:
    - ${REST_IMAGE}-${REST_TAG}.tar
    - ${PROXY_IMAGE}-${PROXY_TAG}.tar
  discard-paths: yes
  base-directory: .

